CLASS:	'class';
MODULE:	'module';
DEF:	'def';
UNDEF:	'undef';
BEGIN:	'begin';
RESCUE:	'rescue';
ENSURE:	'ensure';
END:	'end';
IF:	'if';
UNLESS:	'unless';
THEN:	'then';
ELSIF:	'elsif';
ELSE:	'else';
CASE:	'case';
WHEN:	'when';
WHILE:	'while';
UNTIL:	'until';
FOR:	'for';
BREAK:	'break';
NEXT:	'next';
REDO:	'redo';
RETRY:	'retry';
IN:	'in';
DO:	'do';
RETURN:	'return';
YIELD:	'yield';
SUPER:	'super';
SELF:	'self';
NIL:	'nil';
TRUE:	'true';
FALSE:	'false';
KEYWORD_AND:	'and';
KEYWORD_OR:	'or';
KEYWORD_NOT:	'not';
ALIAS:	'alias';
DEFINED:	'defined?';
KEYWORD_BEGIN:	'BEGIN';
KEYWORD_END:	'END';
KEYWORD_LINE:	'__LINE__';
KEYWORD_FILE:	'__FILE__';
KEYWORD_ENCODING:	'__ENCODING__'
TOKEN_UPLUS:	'unary+';
TOKEN_UMINUS:	'unary-';
TOKEN_POW:	'**';
TOKEN_CMP:	'<=>';
TOKEN_EQ:	'==';
TOKEN_EQQ:	'===';
TOKEN_NEQ:	'!=';
TOKEN_GEQ:	'>=';
TOKEN_LEQ:	'<=';
TOKEN_ANDOP:	'&&';
TOKEN_OROP:	'||';
TOKEN_MATCH:	'=~';
TOKEN_NMATCH:	'!~';
TOKEN_DOT2:	'..';
TOKEN_DOT3:	'...';
TOKEN_AREF:	'[]';
TOKEN_ASET:	'[]=';
TOKEN_LSHFT:	'<<';
TOKEN_RSHFT:	'>>';
TOKEN_ANDDOT:	'&.';
TOKEN_COLON2:	'::';
TOKEN_COLON3:	'::';
TOKEN_OP_ASGN:	TBC;
TOKEN_ASSOC:	'=>';
TOKEN_LPAREN:	'(';
TOKEN_LPAREN_ARG:	'(;
TOKEN_RPAREN:	')';
TOKEN_LBRACK:	'[';
TOKEN_LBRACE:	'{';
TOKEN_LBRACE_ARG:	'{;
TOKEN_STAR:	'*';
TOKEN_DSTAR:	'**arg';
TOKEN_AMPER:	'&';
TOKEN_LAMBDA:	'->';